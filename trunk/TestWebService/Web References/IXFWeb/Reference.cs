//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
// 
#pragma warning disable 1591

namespace TestWebService.IXFWeb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FungusSoap", Namespace="http://Cabi/FungusServer/")]
    public partial class Fungus : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsAliveOperationCompleted;
        
        private System.Threading.SendOrPostCallback NameSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback NameSearchDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EpithetSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback EpithetSearchDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NameByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback NameByKeyDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NameFullByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback NameByKeyRDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthorSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthorSearchDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NamesByCurrentKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback NamesByCurrentKeyDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllUpdatedNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatedNamesInRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatedNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewNamesInRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeprecatedNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeprecatedNamesByRankOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Fungus() {
            this.Url = global::TestWebService.Properties.Settings.Default.TestWebService_IXFWeb_Fungus;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsAliveCompletedEventHandler IsAliveCompleted;
        
        /// <remarks/>
        public event NameSearchCompletedEventHandler NameSearchCompleted;
        
        /// <remarks/>
        public event NameSearchDsCompletedEventHandler NameSearchDsCompleted;
        
        /// <remarks/>
        public event EpithetSearchCompletedEventHandler EpithetSearchCompleted;
        
        /// <remarks/>
        public event EpithetSearchDsCompletedEventHandler EpithetSearchDsCompleted;
        
        /// <remarks/>
        public event NameByKeyCompletedEventHandler NameByKeyCompleted;
        
        /// <remarks/>
        public event NameByKeyDsCompletedEventHandler NameByKeyDsCompleted;
        
        /// <remarks/>
        public event NameFullByKeyCompletedEventHandler NameFullByKeyCompleted;
        
        /// <remarks/>
        public event NameByKeyRDFCompletedEventHandler NameByKeyRDFCompleted;
        
        /// <remarks/>
        public event AuthorSearchCompletedEventHandler AuthorSearchCompleted;
        
        /// <remarks/>
        public event AuthorSearchDsCompletedEventHandler AuthorSearchDsCompleted;
        
        /// <remarks/>
        public event NamesByCurrentKeyCompletedEventHandler NamesByCurrentKeyCompleted;
        
        /// <remarks/>
        public event NamesByCurrentKeyDsCompletedEventHandler NamesByCurrentKeyDsCompleted;
        
        /// <remarks/>
        public event AllUpdatedNamesCompletedEventHandler AllUpdatedNamesCompleted;
        
        /// <remarks/>
        public event UpdatedNamesInRangeCompletedEventHandler UpdatedNamesInRangeCompleted;
        
        /// <remarks/>
        public event UpdatedNamesCompletedEventHandler UpdatedNamesCompleted;
        
        /// <remarks/>
        public event NewNamesInRangeCompletedEventHandler NewNamesInRangeCompleted;
        
        /// <remarks/>
        public event NewNamesCompletedEventHandler NewNamesCompleted;
        
        /// <remarks/>
        public event DeprecatedNamesCompletedEventHandler DeprecatedNamesCompleted;
        
        /// <remarks/>
        public event DeprecatedNamesByRankCompletedEventHandler DeprecatedNamesByRankCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/IsAlive", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAlive() {
            object[] results = this.Invoke("IsAlive", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsAlive(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsAlive", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsAlive(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAliveAsync() {
            this.IsAliveAsync(null);
        }
        
        /// <remarks/>
        public void IsAliveAsync(object userState) {
            if ((this.IsAliveOperationCompleted == null)) {
                this.IsAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAliveOperationCompleted);
            }
            this.InvokeAsync("IsAlive", new object[0], this.IsAliveOperationCompleted, userState);
        }
        
        private void OnIsAliveOperationCompleted(object arg) {
            if ((this.IsAliveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAliveCompleted(this, new IsAliveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/NameSearch", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NameSearch(string SearchText, bool AnywhereInText, long MaxNumber) {
            object[] results = this.Invoke("NameSearch", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNameSearch(string SearchText, bool AnywhereInText, long MaxNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NameSearch", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndNameSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NameSearchAsync(string SearchText, bool AnywhereInText, long MaxNumber) {
            this.NameSearchAsync(SearchText, AnywhereInText, MaxNumber, null);
        }
        
        /// <remarks/>
        public void NameSearchAsync(string SearchText, bool AnywhereInText, long MaxNumber, object userState) {
            if ((this.NameSearchOperationCompleted == null)) {
                this.NameSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNameSearchOperationCompleted);
            }
            this.InvokeAsync("NameSearch", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, this.NameSearchOperationCompleted, userState);
        }
        
        private void OnNameSearchOperationCompleted(object arg) {
            if ((this.NameSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NameSearchCompleted(this, new NameSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/NameSearchDs", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NameSearchDs(string SearchText, bool AnywhereInText, long MaxNumber) {
            object[] results = this.Invoke("NameSearchDs", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNameSearchDs(string SearchText, bool AnywhereInText, long MaxNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NameSearchDs", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndNameSearchDs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NameSearchDsAsync(string SearchText, bool AnywhereInText, long MaxNumber) {
            this.NameSearchDsAsync(SearchText, AnywhereInText, MaxNumber, null);
        }
        
        /// <remarks/>
        public void NameSearchDsAsync(string SearchText, bool AnywhereInText, long MaxNumber, object userState) {
            if ((this.NameSearchDsOperationCompleted == null)) {
                this.NameSearchDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNameSearchDsOperationCompleted);
            }
            this.InvokeAsync("NameSearchDs", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, this.NameSearchDsOperationCompleted, userState);
        }
        
        private void OnNameSearchDsOperationCompleted(object arg) {
            if ((this.NameSearchDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NameSearchDsCompleted(this, new NameSearchDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/EpithetSearch", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EpithetSearch(string SearchText, bool AnywhereInText, long MaxNumber) {
            object[] results = this.Invoke("EpithetSearch", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEpithetSearch(string SearchText, bool AnywhereInText, long MaxNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EpithetSearch", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndEpithetSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EpithetSearchAsync(string SearchText, bool AnywhereInText, long MaxNumber) {
            this.EpithetSearchAsync(SearchText, AnywhereInText, MaxNumber, null);
        }
        
        /// <remarks/>
        public void EpithetSearchAsync(string SearchText, bool AnywhereInText, long MaxNumber, object userState) {
            if ((this.EpithetSearchOperationCompleted == null)) {
                this.EpithetSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEpithetSearchOperationCompleted);
            }
            this.InvokeAsync("EpithetSearch", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, this.EpithetSearchOperationCompleted, userState);
        }
        
        private void OnEpithetSearchOperationCompleted(object arg) {
            if ((this.EpithetSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EpithetSearchCompleted(this, new EpithetSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/EpithetSearchDs", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EpithetSearchDs(string SearchText, bool AnywhereInText, long MaxNumber) {
            object[] results = this.Invoke("EpithetSearchDs", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEpithetSearchDs(string SearchText, bool AnywhereInText, long MaxNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EpithetSearchDs", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndEpithetSearchDs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EpithetSearchDsAsync(string SearchText, bool AnywhereInText, long MaxNumber) {
            this.EpithetSearchDsAsync(SearchText, AnywhereInText, MaxNumber, null);
        }
        
        /// <remarks/>
        public void EpithetSearchDsAsync(string SearchText, bool AnywhereInText, long MaxNumber, object userState) {
            if ((this.EpithetSearchDsOperationCompleted == null)) {
                this.EpithetSearchDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEpithetSearchDsOperationCompleted);
            }
            this.InvokeAsync("EpithetSearchDs", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, this.EpithetSearchDsOperationCompleted, userState);
        }
        
        private void OnEpithetSearchDsOperationCompleted(object arg) {
            if ((this.EpithetSearchDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EpithetSearchDsCompleted(this, new EpithetSearchDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/NameByKey", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NameByKey(long NameKey) {
            object[] results = this.Invoke("NameByKey", new object[] {
                        NameKey});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNameByKey(long NameKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NameByKey", new object[] {
                        NameKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndNameByKey(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NameByKeyAsync(long NameKey) {
            this.NameByKeyAsync(NameKey, null);
        }
        
        /// <remarks/>
        public void NameByKeyAsync(long NameKey, object userState) {
            if ((this.NameByKeyOperationCompleted == null)) {
                this.NameByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNameByKeyOperationCompleted);
            }
            this.InvokeAsync("NameByKey", new object[] {
                        NameKey}, this.NameByKeyOperationCompleted, userState);
        }
        
        private void OnNameByKeyOperationCompleted(object arg) {
            if ((this.NameByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NameByKeyCompleted(this, new NameByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/NameByKeyDs", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NameByKeyDs(long NameKey) {
            object[] results = this.Invoke("NameByKeyDs", new object[] {
                        NameKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNameByKeyDs(long NameKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NameByKeyDs", new object[] {
                        NameKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndNameByKeyDs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NameByKeyDsAsync(long NameKey) {
            this.NameByKeyDsAsync(NameKey, null);
        }
        
        /// <remarks/>
        public void NameByKeyDsAsync(long NameKey, object userState) {
            if ((this.NameByKeyDsOperationCompleted == null)) {
                this.NameByKeyDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNameByKeyDsOperationCompleted);
            }
            this.InvokeAsync("NameByKeyDs", new object[] {
                        NameKey}, this.NameByKeyDsOperationCompleted, userState);
        }
        
        private void OnNameByKeyDsOperationCompleted(object arg) {
            if ((this.NameByKeyDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NameByKeyDsCompleted(this, new NameByKeyDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/NameFullByKey", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NameFullByKey(string NameLsid) {
            object[] results = this.Invoke("NameFullByKey", new object[] {
                        NameLsid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNameFullByKey(string NameLsid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NameFullByKey", new object[] {
                        NameLsid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndNameFullByKey(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NameFullByKeyAsync(string NameLsid) {
            this.NameFullByKeyAsync(NameLsid, null);
        }
        
        /// <remarks/>
        public void NameFullByKeyAsync(string NameLsid, object userState) {
            if ((this.NameFullByKeyOperationCompleted == null)) {
                this.NameFullByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNameFullByKeyOperationCompleted);
            }
            this.InvokeAsync("NameFullByKey", new object[] {
                        NameLsid}, this.NameFullByKeyOperationCompleted, userState);
        }
        
        private void OnNameFullByKeyOperationCompleted(object arg) {
            if ((this.NameFullByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NameFullByKeyCompleted(this, new NameFullByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/NameByKeyRDF", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NameByKeyRDF(string NameLsid) {
            object[] results = this.Invoke("NameByKeyRDF", new object[] {
                        NameLsid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNameByKeyRDF(string NameLsid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NameByKeyRDF", new object[] {
                        NameLsid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndNameByKeyRDF(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NameByKeyRDFAsync(string NameLsid) {
            this.NameByKeyRDFAsync(NameLsid, null);
        }
        
        /// <remarks/>
        public void NameByKeyRDFAsync(string NameLsid, object userState) {
            if ((this.NameByKeyRDFOperationCompleted == null)) {
                this.NameByKeyRDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNameByKeyRDFOperationCompleted);
            }
            this.InvokeAsync("NameByKeyRDF", new object[] {
                        NameLsid}, this.NameByKeyRDFOperationCompleted, userState);
        }
        
        private void OnNameByKeyRDFOperationCompleted(object arg) {
            if ((this.NameByKeyRDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NameByKeyRDFCompleted(this, new NameByKeyRDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/AuthorSearch", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AuthorSearch(string SearchText, bool AnywhereInText, long MaxNumber) {
            object[] results = this.Invoke("AuthorSearch", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAuthorSearch(string SearchText, bool AnywhereInText, long MaxNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AuthorSearch", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndAuthorSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AuthorSearchAsync(string SearchText, bool AnywhereInText, long MaxNumber) {
            this.AuthorSearchAsync(SearchText, AnywhereInText, MaxNumber, null);
        }
        
        /// <remarks/>
        public void AuthorSearchAsync(string SearchText, bool AnywhereInText, long MaxNumber, object userState) {
            if ((this.AuthorSearchOperationCompleted == null)) {
                this.AuthorSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthorSearchOperationCompleted);
            }
            this.InvokeAsync("AuthorSearch", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, this.AuthorSearchOperationCompleted, userState);
        }
        
        private void OnAuthorSearchOperationCompleted(object arg) {
            if ((this.AuthorSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthorSearchCompleted(this, new AuthorSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/AuthorSearchDs", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AuthorSearchDs(string SearchText, bool AnywhereInText, long MaxNumber) {
            object[] results = this.Invoke("AuthorSearchDs", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAuthorSearchDs(string SearchText, bool AnywhereInText, long MaxNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AuthorSearchDs", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndAuthorSearchDs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AuthorSearchDsAsync(string SearchText, bool AnywhereInText, long MaxNumber) {
            this.AuthorSearchDsAsync(SearchText, AnywhereInText, MaxNumber, null);
        }
        
        /// <remarks/>
        public void AuthorSearchDsAsync(string SearchText, bool AnywhereInText, long MaxNumber, object userState) {
            if ((this.AuthorSearchDsOperationCompleted == null)) {
                this.AuthorSearchDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthorSearchDsOperationCompleted);
            }
            this.InvokeAsync("AuthorSearchDs", new object[] {
                        SearchText,
                        AnywhereInText,
                        MaxNumber}, this.AuthorSearchDsOperationCompleted, userState);
        }
        
        private void OnAuthorSearchDsOperationCompleted(object arg) {
            if ((this.AuthorSearchDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthorSearchDsCompleted(this, new AuthorSearchDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/NamesByCurrentKey", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NamesByCurrentKey(long CurrentKey) {
            object[] results = this.Invoke("NamesByCurrentKey", new object[] {
                        CurrentKey});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNamesByCurrentKey(long CurrentKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NamesByCurrentKey", new object[] {
                        CurrentKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndNamesByCurrentKey(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NamesByCurrentKeyAsync(long CurrentKey) {
            this.NamesByCurrentKeyAsync(CurrentKey, null);
        }
        
        /// <remarks/>
        public void NamesByCurrentKeyAsync(long CurrentKey, object userState) {
            if ((this.NamesByCurrentKeyOperationCompleted == null)) {
                this.NamesByCurrentKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNamesByCurrentKeyOperationCompleted);
            }
            this.InvokeAsync("NamesByCurrentKey", new object[] {
                        CurrentKey}, this.NamesByCurrentKeyOperationCompleted, userState);
        }
        
        private void OnNamesByCurrentKeyOperationCompleted(object arg) {
            if ((this.NamesByCurrentKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NamesByCurrentKeyCompleted(this, new NamesByCurrentKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/NamesByCurrentKeyDs", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NamesByCurrentKeyDs(long CurrentKey) {
            object[] results = this.Invoke("NamesByCurrentKeyDs", new object[] {
                        CurrentKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNamesByCurrentKeyDs(long CurrentKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NamesByCurrentKeyDs", new object[] {
                        CurrentKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndNamesByCurrentKeyDs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NamesByCurrentKeyDsAsync(long CurrentKey) {
            this.NamesByCurrentKeyDsAsync(CurrentKey, null);
        }
        
        /// <remarks/>
        public void NamesByCurrentKeyDsAsync(long CurrentKey, object userState) {
            if ((this.NamesByCurrentKeyDsOperationCompleted == null)) {
                this.NamesByCurrentKeyDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNamesByCurrentKeyDsOperationCompleted);
            }
            this.InvokeAsync("NamesByCurrentKeyDs", new object[] {
                        CurrentKey}, this.NamesByCurrentKeyDsOperationCompleted, userState);
        }
        
        private void OnNamesByCurrentKeyDsOperationCompleted(object arg) {
            if ((this.NamesByCurrentKeyDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NamesByCurrentKeyDsCompleted(this, new NamesByCurrentKeyDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/AllUpdatedNames", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AllUpdatedNames(string startDate) {
            object[] results = this.Invoke("AllUpdatedNames", new object[] {
                        startDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAllUpdatedNames(string startDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AllUpdatedNames", new object[] {
                        startDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndAllUpdatedNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AllUpdatedNamesAsync(string startDate) {
            this.AllUpdatedNamesAsync(startDate, null);
        }
        
        /// <remarks/>
        public void AllUpdatedNamesAsync(string startDate, object userState) {
            if ((this.AllUpdatedNamesOperationCompleted == null)) {
                this.AllUpdatedNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllUpdatedNamesOperationCompleted);
            }
            this.InvokeAsync("AllUpdatedNames", new object[] {
                        startDate}, this.AllUpdatedNamesOperationCompleted, userState);
        }
        
        private void OnAllUpdatedNamesOperationCompleted(object arg) {
            if ((this.AllUpdatedNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllUpdatedNamesCompleted(this, new AllUpdatedNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/UpdatedNamesInRange", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdatedNamesInRange(string rank, string startDate, string endDate) {
            object[] results = this.Invoke("UpdatedNamesInRange", new object[] {
                        rank,
                        startDate,
                        endDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatedNamesInRange(string rank, string startDate, string endDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatedNamesInRange", new object[] {
                        rank,
                        startDate,
                        endDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndUpdatedNamesInRange(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatedNamesInRangeAsync(string rank, string startDate, string endDate) {
            this.UpdatedNamesInRangeAsync(rank, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void UpdatedNamesInRangeAsync(string rank, string startDate, string endDate, object userState) {
            if ((this.UpdatedNamesInRangeOperationCompleted == null)) {
                this.UpdatedNamesInRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatedNamesInRangeOperationCompleted);
            }
            this.InvokeAsync("UpdatedNamesInRange", new object[] {
                        rank,
                        startDate,
                        endDate}, this.UpdatedNamesInRangeOperationCompleted, userState);
        }
        
        private void OnUpdatedNamesInRangeOperationCompleted(object arg) {
            if ((this.UpdatedNamesInRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatedNamesInRangeCompleted(this, new UpdatedNamesInRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/UpdatedNames", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdatedNames(string rank, string startDate) {
            object[] results = this.Invoke("UpdatedNames", new object[] {
                        rank,
                        startDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatedNames(string rank, string startDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatedNames", new object[] {
                        rank,
                        startDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndUpdatedNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatedNamesAsync(string rank, string startDate) {
            this.UpdatedNamesAsync(rank, startDate, null);
        }
        
        /// <remarks/>
        public void UpdatedNamesAsync(string rank, string startDate, object userState) {
            if ((this.UpdatedNamesOperationCompleted == null)) {
                this.UpdatedNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatedNamesOperationCompleted);
            }
            this.InvokeAsync("UpdatedNames", new object[] {
                        rank,
                        startDate}, this.UpdatedNamesOperationCompleted, userState);
        }
        
        private void OnUpdatedNamesOperationCompleted(object arg) {
            if ((this.UpdatedNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatedNamesCompleted(this, new UpdatedNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/NewNamesInRange", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NewNamesInRange(string rank, string startDate, string endDate) {
            object[] results = this.Invoke("NewNamesInRange", new object[] {
                        rank,
                        startDate,
                        endDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNewNamesInRange(string rank, string startDate, string endDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NewNamesInRange", new object[] {
                        rank,
                        startDate,
                        endDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndNewNamesInRange(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NewNamesInRangeAsync(string rank, string startDate, string endDate) {
            this.NewNamesInRangeAsync(rank, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void NewNamesInRangeAsync(string rank, string startDate, string endDate, object userState) {
            if ((this.NewNamesInRangeOperationCompleted == null)) {
                this.NewNamesInRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewNamesInRangeOperationCompleted);
            }
            this.InvokeAsync("NewNamesInRange", new object[] {
                        rank,
                        startDate,
                        endDate}, this.NewNamesInRangeOperationCompleted, userState);
        }
        
        private void OnNewNamesInRangeOperationCompleted(object arg) {
            if ((this.NewNamesInRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewNamesInRangeCompleted(this, new NewNamesInRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/NewNames", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NewNames(string rank, string startDate) {
            object[] results = this.Invoke("NewNames", new object[] {
                        rank,
                        startDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNewNames(string rank, string startDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NewNames", new object[] {
                        rank,
                        startDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndNewNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NewNamesAsync(string rank, string startDate) {
            this.NewNamesAsync(rank, startDate, null);
        }
        
        /// <remarks/>
        public void NewNamesAsync(string rank, string startDate, object userState) {
            if ((this.NewNamesOperationCompleted == null)) {
                this.NewNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewNamesOperationCompleted);
            }
            this.InvokeAsync("NewNames", new object[] {
                        rank,
                        startDate}, this.NewNamesOperationCompleted, userState);
        }
        
        private void OnNewNamesOperationCompleted(object arg) {
            if ((this.NewNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewNamesCompleted(this, new NewNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/DeprecatedNames", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeprecatedNames(string startDate) {
            object[] results = this.Invoke("DeprecatedNames", new object[] {
                        startDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeprecatedNames(string startDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeprecatedNames", new object[] {
                        startDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndDeprecatedNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeprecatedNamesAsync(string startDate) {
            this.DeprecatedNamesAsync(startDate, null);
        }
        
        /// <remarks/>
        public void DeprecatedNamesAsync(string startDate, object userState) {
            if ((this.DeprecatedNamesOperationCompleted == null)) {
                this.DeprecatedNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeprecatedNamesOperationCompleted);
            }
            this.InvokeAsync("DeprecatedNames", new object[] {
                        startDate}, this.DeprecatedNamesOperationCompleted, userState);
        }
        
        private void OnDeprecatedNamesOperationCompleted(object arg) {
            if ((this.DeprecatedNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeprecatedNamesCompleted(this, new DeprecatedNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Cabi/FungusServer/DeprecatedNamesByRank", RequestNamespace="http://Cabi/FungusServer/", ResponseNamespace="http://Cabi/FungusServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeprecatedNamesByRank(string rank, string startDate) {
            object[] results = this.Invoke("DeprecatedNamesByRank", new object[] {
                        rank,
                        startDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeprecatedNamesByRank(string rank, string startDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeprecatedNamesByRank", new object[] {
                        rank,
                        startDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndDeprecatedNamesByRank(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeprecatedNamesByRankAsync(string rank, string startDate) {
            this.DeprecatedNamesByRankAsync(rank, startDate, null);
        }
        
        /// <remarks/>
        public void DeprecatedNamesByRankAsync(string rank, string startDate, object userState) {
            if ((this.DeprecatedNamesByRankOperationCompleted == null)) {
                this.DeprecatedNamesByRankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeprecatedNamesByRankOperationCompleted);
            }
            this.InvokeAsync("DeprecatedNamesByRank", new object[] {
                        rank,
                        startDate}, this.DeprecatedNamesByRankOperationCompleted, userState);
        }
        
        private void OnDeprecatedNamesByRankOperationCompleted(object arg) {
            if ((this.DeprecatedNamesByRankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeprecatedNamesByRankCompleted(this, new DeprecatedNamesByRankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsAliveCompletedEventHandler(object sender, IsAliveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAliveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAliveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NameSearchCompletedEventHandler(object sender, NameSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NameSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NameSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NameSearchDsCompletedEventHandler(object sender, NameSearchDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NameSearchDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NameSearchDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EpithetSearchCompletedEventHandler(object sender, EpithetSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EpithetSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EpithetSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EpithetSearchDsCompletedEventHandler(object sender, EpithetSearchDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EpithetSearchDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EpithetSearchDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NameByKeyCompletedEventHandler(object sender, NameByKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NameByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NameByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NameByKeyDsCompletedEventHandler(object sender, NameByKeyDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NameByKeyDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NameByKeyDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NameFullByKeyCompletedEventHandler(object sender, NameFullByKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NameFullByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NameFullByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NameByKeyRDFCompletedEventHandler(object sender, NameByKeyRDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NameByKeyRDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NameByKeyRDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthorSearchCompletedEventHandler(object sender, AuthorSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthorSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthorSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthorSearchDsCompletedEventHandler(object sender, AuthorSearchDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthorSearchDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthorSearchDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NamesByCurrentKeyCompletedEventHandler(object sender, NamesByCurrentKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NamesByCurrentKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NamesByCurrentKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NamesByCurrentKeyDsCompletedEventHandler(object sender, NamesByCurrentKeyDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NamesByCurrentKeyDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NamesByCurrentKeyDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AllUpdatedNamesCompletedEventHandler(object sender, AllUpdatedNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllUpdatedNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllUpdatedNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdatedNamesInRangeCompletedEventHandler(object sender, UpdatedNamesInRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatedNamesInRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatedNamesInRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdatedNamesCompletedEventHandler(object sender, UpdatedNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatedNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatedNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NewNamesInRangeCompletedEventHandler(object sender, NewNamesInRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewNamesInRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewNamesInRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NewNamesCompletedEventHandler(object sender, NewNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeprecatedNamesCompletedEventHandler(object sender, DeprecatedNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeprecatedNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeprecatedNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeprecatedNamesByRankCompletedEventHandler(object sender, DeprecatedNamesByRankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeprecatedNamesByRankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeprecatedNamesByRankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591